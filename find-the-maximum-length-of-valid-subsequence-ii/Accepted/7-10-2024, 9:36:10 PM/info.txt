{"id":1316826279,"question_id":3491,"lang":"rust","lang_name":"Rust","time":"2 weeks, 2 days","timestamp":1720640170,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1316826279/","is_pending":"Not Pending","title":"Find the Maximum Length of Valid Subsequence II","memory":"5.8 MB","code":"use std::cmp::max;\n\nimpl Solution {\n    pub fn maximum_length(nums: Vec<i32>, k: i32) -> i32 {\n        let k = k as usize;\n        let mut f = vec![vec![0; k]; k];\n        let mut ans = 0;\n\n        for &num in nums.iter() {\n            let x = (num % k as i32) as usize;\n            for j in 0..k {\n                let y = (j + k - x) % k;\n                f[x][y] = f[y][x] + 1;\n                ans = max(ans, f[x][y]);\n            }\n        }\n\n        ans\n    }\n}\n","compare_resulttitle_slug":"find-the-maximum-length-of-valid-subsequence-ii","has_notes":false,"flag_type":1}