{"id":1321199087,"question_id":205,"lang":"rust","lang_name":"Rust","time":"1 week, 4 days","timestamp":1720993450,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1321199087/","is_pending":"Not Pending","title":"Isomorphic Strings","memory":"2.2 MB","code":"use std::collections::HashMap;\nimpl Solution {\n    fn help(s: &[u8], t: &[u8]) -> bool {\n        let mut map = HashMap::new();\n        for i in 0..s.len() {\n            if map.contains_key(&s[i]) {\n                if map.get(&s[i]).unwrap() != &t[i] {\n                    return false;\n                }\n            } else {\n                map.insert(s[i], t[i]);\n            }\n        }\n        true\n    }\n\n    pub fn is_isomorphic(s: String, t: String) -> bool {\n        let (s, t) = (s.as_bytes(), t.as_bytes());\n        Self::help(s, t) && Self::help(t, s)\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"isomorphic-strings","has_notes":false,"flag_type":1}