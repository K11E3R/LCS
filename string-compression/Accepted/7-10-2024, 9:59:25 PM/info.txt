{"id":1316844192,"question_id":443,"lang":"rust","lang_name":"Rust","time":"2 weeks, 2 days","timestamp":1720641565,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1316844192/","is_pending":"Not Pending","title":"String Compression","memory":"2.2 MB","code":"impl Solution {\n    pub fn compress(chars: &mut Vec<char>) -> i32 {\n        let (mut i, mut k, n) = (0, 0, chars.len());\n        while i < n {\n            let mut j = i + 1;\n            while j < n && chars[j] == chars[i] {\n                j += 1;\n            }\n            chars[k] = chars[i];\n            k += 1;\n\n            if j - i > 1 {\n                let cnt = (j - i).to_string();\n                for c in cnt.chars() {\n                    chars[k] = c;\n                    k += 1;\n                }\n            }\n            i = j;\n        }\n        k as i32\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression","has_notes":false,"flag_type":1}