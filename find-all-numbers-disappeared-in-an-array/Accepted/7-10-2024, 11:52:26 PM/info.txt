{"id":1316910653,"question_id":448,"lang":"rust","lang_name":"Rust","time":"2 weeks, 1 day","timestamp":1720648346,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1316910653/","is_pending":"Not Pending","title":"Find All Numbers Disappeared in an Array","memory":"2.9 MB","code":"impl Solution {\n    pub fn find_disappeared_numbers(nums: Vec<i32>) -> Vec<i32> {\n        let mut result_array = vec![0; nums.len() + 1];\n        let mut ans: Vec<i32> = Vec::new();\n\n        for index in 0..nums.len() {\n            result_array[nums[index] as usize] = nums[index] as usize;\n        }\n\n        for (index, element) in result_array.iter().skip(1).enumerate() {\n            if *element == 0 { ans.push((index + 1) as i32) }\n        }\n\n        ans\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"find-all-numbers-disappeared-in-an-array","has_notes":false,"flag_type":1}