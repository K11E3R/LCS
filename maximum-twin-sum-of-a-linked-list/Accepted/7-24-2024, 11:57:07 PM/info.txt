{"id":1332345196,"question_id":2236,"lang":"rust","lang_name":"Rust","time":"1 day, 23 hours","timestamp":1721858227,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/1332345196/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"6.8 MB","code":"// Definition for singly-linked list.\n// #[derive(PartialEq, Eq, Clone, Debug)]\n// pub struct ListNode {\n//   pub val: i32,\n//   pub next: Option<Box<ListNode>>\n// }\n// \n// impl ListNode {\n//   #[inline]\n//   fn new(val: i32) -> Self {\n//     ListNode {\n//       next: None,\n//       val\n//     }\n//   }\n// }\nimpl Solution {\n    pub fn getLength(head: &Option<Box<ListNode>>) -> i32 {\n        let mut curr = head;\n\n        let mut n = 0;\n        while curr.is_some() {\n            curr = &curr.as_ref().unwrap().next as &Option<Box<ListNode>>;\n            n += 1;\n        }\n\n        return n;\n    }\n\n    pub fn getLength_ref(h: Option<Box<ListNode>>) -> i32 {\n        let mut curr = h;\n\n        let mut n = 0;\n        while curr.is_some() {\n            curr = curr.unwrap().next;\n            n += 1;\n        }\n\n        return n;\n    }\n\n    pub fn pair_sum(head: Option<Box<ListNode>>) -> i32 {\n        let mut curr = head;\n\n        let len = Self::getLength(&curr);\n\n        let max_: i32 = (len / 2) as i32 - 1;\n\n        let mut queue = vec![];\n        let mut stack = vec![];\n\n        let mut i = 0;\n\n        while i <= max_ {\n            let c = curr.unwrap();\n\n            queue.push(c.val);\n            \n            i += 1;\n            curr = c.next;\n        }\n\n        while curr.is_some() {\n            let c = curr.unwrap();\n\n            stack.push(c.val);\n            curr = c.next;\n        }\n\n        let len_iter = queue.len();\n\n        let mut ptr = 0;\n\n        let mut max_sum = 0;\n\n        while ptr < len_iter {\n            let first = queue[ptr];\n            let last = stack[len_iter - ptr - 1];\n\n            if max_sum < (first + last) {\n                max_sum = first + last;\n            }\n\n            ptr += 1;\n        }\n\n        return max_sum\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false,"flag_type":1}