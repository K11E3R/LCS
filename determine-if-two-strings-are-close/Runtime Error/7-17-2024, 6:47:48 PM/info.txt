{"id":1324320868,"question_id":1777,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1721234868,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1324320868/","is_pending":"Not Pending","title":"Determine if Two Strings Are Close","memory":"N/A","code":"class Solution:\n    def minimumDeviation(self, nums: List[int]) -> int:\n        h = []\n        mi = inf\n        for v in nums:\n            if v & 1:\n                v <<= 1\n            h.append(-v)\n            mi = min(mi, v)\n        heapify(h)\n        ans = -h[0] - mi\n        while h[0] % 2 == 0:\n            x = heappop(h) // 2\n            heappush(h, x)\n            mi = min(mi, -x)\n            ans = min(ans, -h[0] - mi)\n        return ans","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"determine-if-two-strings-are-close","has_notes":false,"flag_type":1}