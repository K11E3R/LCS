{"id":1332348637,"question_id":450,"lang":"erlang","lang_name":"Erlang","time":"1 day, 23 hours","timestamp":1721858654,"status":10,"status_display":"Accepted","runtime":"239 ms","url":"/submissions/detail/1332348637/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"76.8 MB","code":"%% Definition for a binary tree node.\n%%\n%% -record(tree_node, {val = 0 :: integer(),\n%%                     left = null  :: 'null' | #tree_node{},\n%%                     right = null :: 'null' | #tree_node{}}).\n\n-spec delete_node(Root :: #tree_node{} | null, Key :: integer()) -> #tree_node{} | null.\n\nright_most({tree_node, Val, _, null}) ->\n    Val;\nright_most({tree_node, Val, Left, Right}) ->\n    right_most(Right).\n\ndelete_node(null, _) -> null;\ndelete_node({tree_node, Key, null, null}, Key) ->\n    null;\ndelete_node({tree_node, Key, null, Right}, Key) ->\n    Right;\ndelete_node({tree_node, Key, Left, null}, Key) ->\n    Left;\ndelete_node({tree_node, Key, Left, Right}, Key) ->\n    Val=right_most(Left),\n    NewLeft=delete_node(Left, Val),\n    {tree_node, Val, NewLeft, Right};\ndelete_node({tree_node, Val, Left, Right}, Key) when Val<Key->\n    {tree_node, Val, Left, delete_node(Right, Key)};\ndelete_node({tree_node, Val, Left, Right}, Key) when Val>Key->\n    {tree_node, Val, delete_node(Left, Key), Right}.","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}