{"id":1332326740,"question_id":1250,"lang":"python3","lang_name":"Python3","time":"2Â days","timestamp":1721856088,"status":10,"status_display":"Accepted","runtime":"475 ms","url":"/submissions/detail/1332326740/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"41.9 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        m, n = len(text1), len(text2)\n        l = []\n        for i in range(m+1):\n            v = [0]*(n+1)\n            l.append(v)\n        for i in range(1, m+1):\n            for j in range(1, n+1):\n\n                if text1[i-1] == text2[j-1]:\n                    l[i][j] = l[i-1][j-1] + 1\n\n                else:\n                    l[i][j] = max(l[i-1][j], l[i][j-1])\n\n        return l[m][n]","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}