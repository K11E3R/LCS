{"id":1328453598,"question_id":2472,"lang":"python3","lang_name":"Python3","time":"5 days, 8 hours","timestamp":1721566942,"status":10,"status_display":"Accepted","runtime":"550 ms","url":"/submissions/detail/1328453598/","is_pending":"Not Pending","title":"Build a Matrix With Conditions","memory":"25.5 MB","code":"\nclass Solution:\n    def buildMatrix(\n        self, k: int, rowConditions: List[List[int]], colConditions: List[List[int]]\n    ) -> List[List[int]]:\n        def f(cond):\n            g = defaultdict(list)\n            indeg = [0] * (k + 1)\n            for a, b in cond:\n                g[a].append(b)\n                indeg[b] += 1\n            q = deque([i for i, v in enumerate(indeg[1:], 1) if v == 0])\n            res = []\n            while q:\n                for _ in range(len(q)):\n                    i = q.popleft()\n                    res.append(i)\n                    for j in g[i]:\n                        indeg[j] -= 1\n                        if indeg[j] == 0:\n                            q.append(j)\n            return None if len(res) != k else res\n\n        row = f(rowConditions)\n        col = f(colConditions)\n        if row is None or col is None:\n            return []\n        ans = [[0] * k for _ in range(k)]\n        m = [0] * (k + 1)\n        for i, v in enumerate(col):\n            m[v] = i\n        for i, v in enumerate(row):\n            ans[i][m[v]] = v\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"build-a-matrix-with-conditions","has_notes":false,"flag_type":1}