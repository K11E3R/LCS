{"id":1320084824,"question_id":445,"lang":"rust","lang_name":"Rust","time":"1 week, 6 days","timestamp":1720904376,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1320084824/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"2.1 MB","code":"// Definition for singly-linked list.\n// #[derive(PartialEq, Eq, Clone, Debug)]\n// pub struct ListNode {\n//   pub val: i32,\n//   pub next: Option<Box<ListNode>>\n// }\n// \n// impl ListNode {\n//   #[inline]\n//   fn new(val: i32) -> Self {\n//     ListNode {\n//       next: None,\n//       val\n//     }\n//   }\n// }\nimpl Solution {\n    pub fn add_two_numbers(l1: Option<Box<ListNode>>, l2: Option<Box<ListNode>>) -> Option<Box<ListNode>> {\n        let mut stack1 = vec![];\n        let mut stack2 = vec![];\n\n        let mut p1 = &l1;\n        while let Some(node) = p1 {\n            stack1.push(node.val);\n            p1 = &node.next;\n        }\n\n        let mut p2 = &l2;\n        while let Some(node) = p2 {\n            stack2.push(node.val);\n            p2 = &node.next;\n        }\n\n        let mut carry = 0;\n        let mut result = None;\n\n        while !stack1.is_empty() || !stack2.is_empty() || carry > 0 {\n            let mut sum = carry;\n            if let Some(digit) = stack1.pop() {\n                sum += digit;\n            }\n            if let Some(digit) = stack2.pop() {\n                sum += digit;\n            }\n\n            carry = sum / 10;\n            let digit = sum % 10;\n\n            // Wiiii make result\n            let mut new_node = ListNode::new(digit);\n            new_node.next = result;\n            result = Some(Box::new(new_node));\n        }\n\n        result\n    }\n}","compare_resulttitle_slug":"add-two-numbers-ii","has_notes":false,"flag_type":1}