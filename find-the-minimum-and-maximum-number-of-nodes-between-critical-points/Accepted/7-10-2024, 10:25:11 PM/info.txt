{"id":1316862165,"question_id":2182,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 2Â days","timestamp":1720643111,"status":10,"status_display":"Accepted","runtime":"162 ms","url":"/submissions/detail/1316862165/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"26.3 MB","code":"def nodesBetweenCriticalPoints(nums: List[int]) -> List[int]:\n    firstCP = None\n    currCP = None\n    minDist = None\n    \n    for i, num in enumerate(nums[1:-1], 1):\n        if (num > nums[i - 1] and num > nums[i + 1]) or (num < nums[i - 1] and num < nums[i + 1]):\n            if firstCP is None:\n                firstCP = i\n            else:\n                minDist = min(minDist, i - currCP) if minDist else i - currCP\n            currCP = i\n\n    minDist = -1 if not minDist else minDist\n    maxDist = -1 if firstCP == currCP else currCP - firstCP\n    return f'[{minDist},{maxDist}]'\n\nf = open('user.out','w')\nfor i in map(loads, stdin):\n    f.write(f'{nodesBetweenCriticalPoints(i)}\\n')\nf.flush()\nexit(0)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points","has_notes":false,"flag_type":1}