{"id":1285087656,"question_id":2213,"lang":"javascript","lang_name":"JavaScript","time":"1 month, 2 weeks","timestamp":1718123372,"status":10,"status_display":"Accepted","runtime":"535 ms","url":"/submissions/detail/1285087656/","is_pending":"Not Pending","title":"Find All People With Secret","memory":"111.6 MB","code":"function findAllPeople(n, meetings, firstPerson) {\n    const parent = Array.from({ length: n }, (_, i) => i);\n    const rank = Array(n).fill(0);\n\n    function find(x) {\n        if (parent[x] !== x) {\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n\n    function union(x, y) {\n        const rootX = find(x);\n        const rootY = find(y);\n        if (rootX !== rootY) {\n            if (rank[rootX] > rank[rootY]) {\n                parent[rootY] = rootX;\n            } else if (rank[rootX] < rank[rootY]) {\n                parent[rootX] = rootY;\n            } else {\n                parent[rootY] = rootX;\n                rank[rootX] += 1;\n            }\n        }\n    }\n\n    union(0, firstPerson);\n\n    meetings.sort((a, b) => a[2] - b[2]);\n\n    let i = 0;\n    while (i < meetings.length) {\n        const currentTime = meetings[i][2];\n        const currentMeetings = [];\n        const people = new Set();\n\n        while (i < meetings.length && meetings[i][2] === currentTime) {\n            const [x, y] = meetings[i];\n            currentMeetings.push([x, y]);\n            people.add(x);\n            people.add(y);\n            i += 1;\n        }\n\n        const initialParent = new Map();\n        for (const p of people) {\n            initialParent.set(p, find(p));\n        }\n\n        for (const [x, y] of currentMeetings) {\n            union(x, y);\n        }\n\n        const knowsSecret = new Set();\n        for (const p of people) {\n            if (find(p) === find(0)) {\n                knowsSecret.add(p);\n            }\n        }\n\n        for (const p of people) {\n            parent[p] = initialParent.get(p);\n        }\n\n        for (const [x, y] of currentMeetings) {\n            if (knowsSecret.has(x) || knowsSecret.has(y)) {\n                union(x, y);\n            }\n        }\n    }\n\n    return Array.from({ length: n }, (_, i) => i).filter(i => find(i) === find(0));\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-all-people-with-secret","has_notes":false,"flag_type":1}