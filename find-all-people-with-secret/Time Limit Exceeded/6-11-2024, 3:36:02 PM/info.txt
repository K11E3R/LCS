{"id":1284930706,"question_id":2213,"lang":"javascript","lang_name":"JavaScript","time":"1 month, 2 weeks","timestamp":1718112962,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1284930706/","is_pending":"Not Pending","title":"Find All People With Secret","memory":"N/A","code":"/**\n * @param {number} n\n * @param {number[][]} meetings\n * @param {number} firstPerson\n * @return {number[]}\n */\n\nfunction groupMeetingsByIndex(sortedM) {\n  const groupedByIndex = {};\n  sortedM.forEach((meeting) => {\n    const index = meeting[2];\n    if (!groupedByIndex[index]) {\n      groupedByIndex[index] = [];\n    }\n    groupedByIndex[index].push(meeting);\n  });\n  return groupedByIndex;\n}\n\n\nvar findAllPeople = (n, meetings, firstPerson)=>{\n    let res = new Array()\n    res.push(0)\n    res.push(firstPerson)\n    let sortedM = meetings\n    let List_Meeting = new Array()\n    sortedM.forEach((a)=>{\n        List_Meeting.push([[a[0],a[2]],[a[1],a[2]]])\n      })\n    sortedM.sort((a, b) => a[2]-b[2])\n    const groupbY  = groupMeetingsByIndex(sortedM)\n    for (var prop in groupbY) {\n      groupbY[prop].sort((a,b) => {\n        if(res.includes(a[0]) || res.includes(a[1])){\n          return -1\n        }\n      })\n    groupbY[prop].forEach((a)=>{\n        if (res.includes(a[0]) ){\n                res.push(a[1])\n            }\n            if (res.includes(a[1]) ){\n                res.push(a[0])\n            }\n        }\n    )}\n    return Array.from(new Set(res)).sort((a, b)=> a-b)\n};","compare_result":"11111111111111111111111111111111100000000000000000000000","title_slug":"find-all-people-with-secret","has_notes":false,"flag_type":1}