{"id":1321199276,"question_id":290,"lang":"rust","lang_name":"Rust","time":"1 week, 4 days","timestamp":1720993474,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1321199276/","is_pending":"Not Pending","title":"Word Pattern","memory":"2.1 MB","code":"use std::collections::HashMap;\n\nimpl Solution {\n    pub fn word_pattern(pattern: String, s: String) -> bool {\n        let cs1: Vec<char> = pattern.chars().collect();\n        let cs2: Vec<&str> = s.split_whitespace().collect();\n        let n = cs1.len();\n        if n != cs2.len() {\n            return false;\n        }\n        let mut map1 = HashMap::new();\n        let mut map2 = HashMap::new();\n        for i in 0..n {\n            let c = cs1[i];\n            let s = cs2[i];\n            if !map1.contains_key(&c) {\n                map1.insert(c, i);\n            }\n            if !map2.contains_key(&s) {\n                map2.insert(s, i);\n            }\n            if map1.get(&c) != map2.get(&s) {\n                return false;\n            }\n        }\n        true\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"word-pattern","has_notes":false,"flag_type":1}