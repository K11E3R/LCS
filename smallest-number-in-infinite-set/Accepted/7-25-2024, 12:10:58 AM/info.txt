{"id":1332351740,"question_id":2413,"lang":"ruby","lang_name":"Ruby","time":"1 day, 23 hours","timestamp":1721859058,"status":10,"status_display":"Accepted","runtime":"657 ms","url":"/submissions/detail/1332351740/","is_pending":"Not Pending","title":"Smallest Number in Infinite Set","memory":"212.5 MB","code":"class SmallestInfiniteSet\n    def initialize()\n        @set = Set.new\n        for i in(1).upto(1000)\n            @set.add(i)\n        end\n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def pop_smallest()\n        num = @set.min\n        @set.delete(num)\n        num\n    end\n\n\n=begin\n    :type num: Integer\n    :rtype: Void\n=end\n    def add_back(num)\n        @set.add(num) unless @set.include?(num)\n    end\n\n\nend\n\n# Your SmallestInfiniteSet object will be instantiated and called as such:\n# obj = SmallestInfiniteSet.new()\n# param_1 = obj.pop_smallest()\n# obj.add_back(num)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-number-in-infinite-set","has_notes":false,"flag_type":1}