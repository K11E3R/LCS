{"id":1320096546,"question_id":1196,"lang":"rust","lang_name":"Rust","time":"1 week, 6 days","timestamp":1720905745,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1320096546/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"2.3 MB","code":"impl Solution {\n    pub fn min_height_shelves(books: Vec<Vec<i32>>, shelf_width: i32) -> i32 {\n        let n = books.len();\n        let mut dp = vec![std::i32::MAX; n + 1];\n        dp[0] = 0;\n\n        for i in 1..=n {\n            let mut current_width = 0;\n            let mut max_height = 0;\n\n            for j in (1..=i).rev() {\n                current_width += books[j - 1][0];\n                if current_width > shelf_width {\n                    break;\n                }\n                max_height = max_height.max(books[j - 1][1]);\n                dp[i] = dp[i].min(dp[j - 1] + max_height);\n            }\n        }\n\n        dp[n]\n    }\n}","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves","has_notes":false,"flag_type":1}