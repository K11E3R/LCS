{"id":1324347147,"question_id":547,"lang":"rust","lang_name":"Rust","time":"1 week, 2 days","timestamp":1721236246,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1324347147/","is_pending":"Not Pending","title":"Number of Provinces","memory":"2.5 MB","code":"impl Solution {\n    fn dfs(is_connected: &mut Vec<Vec<i32>>, vis: &mut Vec<bool>, i: usize) {\n        vis[i] = true;\n        for j in 0..is_connected.len() {\n            if vis[j] || is_connected[i][j] == 0 {\n                continue;\n            }\n            Self::dfs(is_connected, vis, j);\n        }\n    }\n\n    pub fn find_circle_num(mut is_connected: Vec<Vec<i32>>) -> i32 {\n        let n = is_connected.len();\n        let mut vis = vec![false; n];\n        let mut res = 0;\n        for i in 0..n {\n            if vis[i] {\n                continue;\n            }\n            res += 1;\n            Self::dfs(&mut is_connected, &mut vis, i);\n        }\n        res\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}