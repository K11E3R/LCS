{"id":1324347349,"question_id":547,"lang":"rust","lang_name":"Rust","time":"1 week, 2 days","timestamp":1721236257,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1324347349/","is_pending":"Not Pending","title":"Number of Provinces","memory":"2.3 MB","code":"impl Solution {\n    pub fn find_circle_num(is_connected: Vec<Vec<i32>>) -> i32 {\n        let n = is_connected.len();\n        let mut visited = vec![false; n];\n        let mut count = 0;\n\n        for i in 0..n {\n            if !visited[i] {\n                count += 1;\n                let mut stack = vec![i];\n                \n                while let Some(node) = stack.pop() {\n                    for j in 0..n {\n                        if is_connected[node][j] == 1 && !visited[j] {\n                            visited[j] = true;\n                            stack.push(j);\n                        }\n                    }\n                }\n            }\n        }\n\n        count\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}