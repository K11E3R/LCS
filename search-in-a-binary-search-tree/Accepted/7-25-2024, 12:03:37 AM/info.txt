{"id":1332348331,"question_id":783,"lang":"elixir","lang_name":"Elixir","time":"1 day, 23 hours","timestamp":1721858617,"status":10,"status_display":"Accepted","runtime":"390 ms","url":"/submissions/detail/1332348331/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"87.2 MB","code":"# Definition for a binary tree node.\n#\n# defmodule TreeNode do\n#   @type t :: %__MODULE__{\n#           val: integer,\n#           left: TreeNode.t() | nil,\n#           right: TreeNode.t() | nil\n#         }\n#   defstruct val: 0, left: nil, right: nil\n# end\n\ndefmodule Solution do\n  @spec search_bst(root :: TreeNode.t | nil, val :: integer) :: TreeNode.t | nil\n  def search_bst(nil, val), do: nil\n  def search_bst(root, val) do\n    cond do\n      val == root.val -> root\n      val < root.val -> search_bst(root.left, val)\n      true -> search_bst(root.right, val)\n    end\n  end\nend","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}