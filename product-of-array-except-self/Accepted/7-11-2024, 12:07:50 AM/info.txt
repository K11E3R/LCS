{"id":1316917851,"question_id":238,"lang":"rust","lang_name":"Rust","time":"2 weeks, 1 day","timestamp":1720649270,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1316917851/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"3.3 MB","code":"impl Solution {\n    pub fn product_except_self(nums: Vec<i32>) -> Vec<i32> {\n        let mut prefix: i32 = 1;\n        let mut suffix: i32 = 1;\n\n        let len = nums.len();\n        let mut answer = vec![1; len];\n\n        //   wiii\n        for index in 0..len {\n            let left = index;\n            let right = (len - 1) - index;\n\n            answer[left] *= prefix;\n            answer[right] *= suffix;\n\n            prefix *= nums[left];\n            suffix *= nums[right];\n        }\n\n        answer\n    }\n\n}","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}