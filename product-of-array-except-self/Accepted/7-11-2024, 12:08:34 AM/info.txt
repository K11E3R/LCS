{"id":1316918166,"question_id":238,"lang":"rust","lang_name":"Rust","time":"2 weeks, 1 day","timestamp":1720649314,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1316918166/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"3 MB","code":"impl Solution {\n    pub fn product_except_self(nums: Vec<i32>) -> Vec<i32> {\n        let zero_count = nums.iter().filter(|&x| *x == 0).count();\n\n        if zero_count > 1 {\n            return vec![0; nums.len()];\n        }\n\n        let total_product = nums.iter().filter(|&x| *x != 0).product::<i32>();\n        nums.into_iter().map(|num| {\n            if num == 0 {\n                total_product\n            } else if zero_count == 1 {\n                0\n            } else {\n                total_product / num\n            }\n        }).collect::<Vec<i32>>()\n    }\n\n}","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}