{"id":1319110567,"question_id":643,"lang":"rust","lang_name":"Rust","time":"1 week, 6 days","timestamp":1720820106,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1319110567/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"2.8 MB","code":"impl Solution {\n    pub fn find_max_average(nums: Vec<i32>, k: i32) -> f64 {\n        let k = k as usize;\n        let n = nums.len();\n        let mut s = nums.iter().take(k).sum::<i32>();\n        let mut ans = s;\n        for i in k..n {\n            s += nums[i] - nums[i - k];\n            ans = ans.max(s);\n        }\n        f64::from(ans) / f64::from(k as i32)\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}