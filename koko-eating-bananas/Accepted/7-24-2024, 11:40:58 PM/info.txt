{"id":1332336970,"question_id":907,"lang":"python3","lang_name":"Python3","time":"1 day, 23 hours","timestamp":1721857258,"status":10,"status_display":"Accepted","runtime":"282 ms","url":"/submissions/detail/1332336970/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"18.1 MB","code":"import math as m\nclass Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        low, high = 1, max(piles)\n        while low < high:\n            mid = (low + high) // 2\n            hours_required = sum(m.ceil(pile / mid) for pile in piles)\n            if hours_required > h:\n                low = mid + 1\n            else:\n                high = mid\n        return low","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}