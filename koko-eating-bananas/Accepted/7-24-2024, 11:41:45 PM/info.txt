{"id":1332337402,"question_id":907,"lang":"python3","lang_name":"Python3","time":"1 day, 23 hours","timestamp":1721857305,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/1332337402/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"17.5 MB","code":"def minEatingSpeed(piles: List[int], h: int) -> int:\n    M, S, N = max(piles), sum(piles), len(piles)\n    right, left = min(ceil(S/(h-N+1)), M) , ceil(S/h)\n    if N == h: return M\n\n    while right >= left:\n        mid = (right + left) // 2\n        if (t:=sum([ceil(x/mid) for x in piles])) > h:\n            left = mid + 1\n        else: \n            right = mid - 1\n    return left\n\nwith open(\"user.out\", 'w') as f:\n    inputs = map(loads, stdin)\n    for piles in inputs:\n        h = next(inputs)\n        print(minEatingSpeed(piles, h), file=f)\nexit(0)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}