{"id":1325551448,"question_id":1653,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1721328871,"status":10,"status_display":"Accepted","runtime":"212 ms","url":"/submissions/detail/1325551448/","is_pending":"Not Pending","title":"Number of Good Leaf Nodes Pairs","memory":"17.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def countPairs(self, root: TreeNode, distance: int) -> int:\n        def dfs(root, cnt, i):\n            if root is None or i >= distance:\n                return\n            if root.left is None and root.right is None:\n                cnt[i] += 1\n                return\n            dfs(root.left, cnt, i + 1)\n            dfs(root.right, cnt, i + 1)\n\n        if root is None:\n            return 0\n        ans = self.countPairs(root.left, distance) + self.countPairs(\n            root.right, distance\n        )\n        cnt1 = Counter()\n        cnt2 = Counter()\n        dfs(root.left, cnt1, 1)\n        dfs(root.right, cnt2, 1)\n\n        for k1, v1 in cnt1.items():\n            for k2, v2 in cnt2.items():\n                if k1 + k2 <= distance:\n                    ans += v1 * v2\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-good-leaf-nodes-pairs","has_notes":false,"flag_type":1}