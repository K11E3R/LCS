{"id":1316831316,"question_id":2854,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1720640533,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1316831316/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"N/A","code":"function minimizeConcatenatedLength(words: string[]): number {\n    const n = words.length;\n    const f: number[][][] = Array(n)\n        .fill(0)\n        .map(() =>\n            Array(26)\n                .fill(0)\n                .map(() => Array(26).fill(0)),\n        );\n    const dfs = (i: number, a: number, b: number): number => {\n        if (i >= n) {\n            return 0;\n        }\n        if (f[i][a][b] > 0) {\n            return f[i][a][b];\n        }\n        const s = words[i];\n        const m = s.length;\n        const x =\n            dfs(i + 1, a, s[m - 1].charCodeAt(0) - 97) - (s[0].charCodeAt(0) - 97 === b ? 1 : 0);\n        const y =\n            dfs(i + 1, s[0].charCodeAt(0) - 97, b) - (s[m - 1].charCodeAt(0) - 97 === a ? 1 : 0);\n        return (f[i][a][b] = Math.min(x + m, y + m));\n    };\n    return (\n        words[0].length +\n        dfs(1, words[0][0].charCodeAt(0) - 97, words[0][words[0].length - 1].charCodeAt(0) - 97)\n    );\n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false,"flag_type":1}