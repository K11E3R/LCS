{"id":1316833904,"question_id":2854,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1720640738,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/1316833904/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"53.9 MB","code":"class Solution {\n    private Integer[][][] f;\n    private String[] words;\n    private int n;\n\n    public int minimizeConcatenatedLength(String[] words) {\n        n = words.length;\n        this.words = words;\n        f = new Integer[n][26][26];\n        return words[0].length()\n            + dfs(1, words[0].charAt(0) - 'a', words[0].charAt(words[0].length() - 1) - 'a');\n    }\n\n    private int dfs(int i, int a, int b) {\n        if (i >= n) {\n            return 0;\n        }\n        if (f[i][a][b] != null) {\n            return f[i][a][b];\n        }\n        String s = words[i];\n        int m = s.length();\n        int x = dfs(i + 1, a, s.charAt(m - 1) - 'a') - (s.charAt(0) - 'a' == b ? 1 : 0);\n        int y = dfs(i + 1, s.charAt(0) - 'a', b) - (s.charAt(m - 1) - 'a' == a ? 1 : 0);\n        return f[i][a][b] = m + Math.min(x, y);\n    }\n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false,"flag_type":1}