{"id":1316842090,"question_id":1146,"lang":"rust","lang_name":"Rust","time":"2 weeks, 2 days","timestamp":1720641388,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1316842090/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"2.1 MB","code":"impl Solution {\n    pub fn gcd_of_strings(str1: String, str2: String) -> String {\n        if str1.clone() + &str2 != str2.clone() + &str1 {\n            return String::from(\"\");\n        }\n        fn gcd(a: usize, b: usize) -> usize {\n            if b == 0 {\n                return a;\n            }\n            gcd(b, a % b)\n        }\n\n        let (m, n) = (str1.len().max(str2.len()), str1.len().min(str2.len()));\n        str1[..gcd(m, n)].to_string()\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}