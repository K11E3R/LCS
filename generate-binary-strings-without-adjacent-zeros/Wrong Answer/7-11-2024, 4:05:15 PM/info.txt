{"id":1317633982,"question_id":3453,"lang":"rust","lang_name":"Rust","time":"2 weeks, 1 day","timestamp":1720706715,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1317633982/","is_pending":"Not Pending","title":"Generate Binary Strings Without Adjacent Zeros","memory":"N/A","code":"impl Solution {\n    pub fn valid_strings(n: i32) -> Vec<String> {\n        let n = n as usize;\n        let mut ans = Vec::new();\n        let mut current = vec![0; n];\n\n        fn dfs(index: usize, current: &mut Vec<u8>, ans: &mut Vec<String>) {\n            if index == current.len() {\n                ans.push(current.iter().map(|&bit| (bit + b'0') as char).collect());\n                return;\n            }\n\n            for &bit in &[b'0', b'1'] {\n                if index == 0 || current[index - 1] == b'1' {\n                    current[index] = bit;\n                    dfs(index + 1, current, ans);\n                }\n            }\n        }\n\n        dfs(0, &mut current, &mut ans);\n\n        ans\n    }\n}","compare_result":"00000000000000000000","title_slug":"generate-binary-strings-without-adjacent-zeros","has_notes":false,"flag_type":1}