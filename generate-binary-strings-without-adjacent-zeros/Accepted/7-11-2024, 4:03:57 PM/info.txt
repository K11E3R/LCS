{"id":1317632805,"question_id":3453,"lang":"rust","lang_name":"Rust","time":"2 weeks, 1 day","timestamp":1720706637,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1317632805/","is_pending":"Not Pending","title":"Generate Binary Strings Without Adjacent Zeros","memory":"2.8 MB","code":"impl Solution {\n    pub fn valid_strings(n: i32) -> Vec<String> {\n        let n = n as usize;\n        let mut ans = Vec::new();\n        let mut t = Vec::new();\n\n        fn dfs(i: usize, n: usize, t: &mut Vec<char>, ans: &mut Vec<String>) {\n            if i >= n {\n                ans.push(t.iter().collect());\n                return;\n            }\n            for j in 0..2 {\n                if (j == 0 && (i == 0 || t[i - 1] == '1')) || j == 1 {\n                    t.push((j + 48) as u8 as char);\n                    dfs(i + 1, n, t, ans);\n                    t.pop();\n                }\n            }\n        }\n\n        dfs(0, n, &mut t, &mut ans);\n\n        ans\n    }\n}","compare_result":"11111111111111111111","title_slug":"generate-binary-strings-without-adjacent-zeros","has_notes":false,"flag_type":1}