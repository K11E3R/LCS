{"id":1314467512,"question_id":2139,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 3Â days","timestamp":1720475995,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1314467512/","is_pending":"Not Pending","title":"Detect Squares","memory":"N/A","code":"from collections import defaultdict\n\nclass DetectSquares:\n    def __init__(self):\n        self.point_counts = defaultdict(lambda: defaultdict(int))\n\n    def add(self, point: List[int]) -> None:\n        x, y = point\n        self.point_counts[x][y] += 1\n\n    def count(self, point: List[int]) -> int:\n        x1, y1 = point\n        ans = 0\n        \n        for x2, count2 in self.point_counts.items():\n            if x2 != x1:\n                d = x2 - x1\n                if y1 in count2:\n                    count_y1 = self.point_counts[x1][y1]\n                    count_y1_plus_d = self.point_counts[x1][y1 + d]\n                    count_y1_minus_d = self.point_counts[x1][y1 - d]\n                    ans += count2[y1] * count_y1_plus_d * count2[y1 + d]\n                    ans += count2[y1] * count_y1_minus_d * count2[y1 - d]\n        \n        return ans\n","compare_result":"111110000000000000000000000000000000000000000000000000","title_slug":"detect-squares","has_notes":false,"flag_type":1}