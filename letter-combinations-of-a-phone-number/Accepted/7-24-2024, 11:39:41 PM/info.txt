{"id":1332336330,"question_id":17,"lang":"python3","lang_name":"Python3","time":"1 day, 23 hours","timestamp":1721857181,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/1332336330/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"16.5 MB","code":"from itertools import combinations\nclass Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        digit_map = {\n            \"2\": \"abc\",\n            \"3\": \"def\",\n            \"4\": \"ghi\",\n            \"5\": \"jkl\",\n            \"6\": \"mno\",\n            \"7\": \"pqrs\",\n            \"8\": \"tuv\", \n            \"9\": \"wxyz\"\n        }\n\n        if len(digits) == 1:\n            return [elem for elem in digit_map[digits]]\n        else:\n            tmp_list = []\n            for d in digits:\n                if d in digit_map.keys():\n                    tmp_list.append(digit_map[d])\n            \n            if not tmp_list:\n                return []\n\n            result = [''.join(combination) for combination in product(*tmp_list)]\n            return result\n\n","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}