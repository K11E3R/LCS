{"id":1332336491,"question_id":17,"lang":"python3","lang_name":"Python3","time":"1 day, 23 hours","timestamp":1721857198,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1332336491/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"16.4 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        digitToLetter = {\n            \"2\": \"abc\",\n            \"3\": \"def\",\n            \"4\": \"ghi\",\n            \"5\": \"jkl\",\n            \"6\": \"mno\",\n            \"7\": \"pqrs\",\n            \"8\": \"tuv\",\n            \"9\": \"wxyz\"\n        }\n        \n        answer = []\n\n        if not digits:\n            return []\n  \n        def findCombo(i, subset):\n            if len(subset) == len(digits):\n                answer.append(subset)\n                return\n            \n            for char in digitToLetter[digits[i]]:\n                findCombo(i+1, subset+char)\n\n        findCombo(0, \"\")\n        \n        return answer\n","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}