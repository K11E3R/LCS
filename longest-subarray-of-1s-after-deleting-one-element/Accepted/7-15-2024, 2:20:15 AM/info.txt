{"id":1321263097,"question_id":1586,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1721002815,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1321263097/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"64.1 MB","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> left(n + 1);\n        vector<int> right(n + 1);\n        for (int i = 1; i <= n; ++i) {\n            if (nums[i - 1]) {\n                left[i] = left[i - 1] + 1;\n            }\n        }\n        for (int i = n - 1; ~i; --i) {\n            if (nums[i]) {\n                right[i] = right[i + 1] + 1;\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            ans = max(ans, left[i] + right[i + 1]);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}