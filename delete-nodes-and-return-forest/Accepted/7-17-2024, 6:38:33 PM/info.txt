{"id":1324310595,"question_id":1207,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1721234313,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1324310595/","is_pending":"Not Pending","title":"Delete Nodes And Return Forest","memory":"17.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def delNodes(\n        self, root: Optional[TreeNode], to_delete: List[int]\n    ) -> List[TreeNode]:\n        def dfs(root: Optional[TreeNode]) -> Optional[TreeNode]:\n            if root is None:\n                return None\n            root.left, root.right = dfs(root.left), dfs(root.right)\n            if root.val not in s:\n                return root\n            if root.left:\n                ans.append(root.left)\n            if root.right:\n                ans.append(root.right)\n            return None\n\n        s = set(to_delete)\n        ans = []\n        if dfs(root):\n            ans.append(root)\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-nodes-and-return-forest","has_notes":false,"flag_type":1}