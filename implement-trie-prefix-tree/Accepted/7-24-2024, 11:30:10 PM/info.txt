{"id":1332331346,"question_id":208,"lang":"python3","lang_name":"Python3","time":"2Â days","timestamp":1721856610,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/1332331346/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"28 MB","code":"class Trie:\n\n    def __init__(self):\n        self.prefix = set()\n        self.dic = set()\n        \n    def insert(self, word: str) -> None:\n        for i in range(len(word)):\n            self.prefix.add(word[:i+1])\n        self.dic.add(word)\n\n    def search(self, word: str) -> bool:\n        return word in self.dic\n\n    def startsWith(self, prefix: str) -> bool:\n        return prefix in self.prefix\n        \n\n\n# Your Trie object will be instantiated and called as such:\n# obj = Trie()\n# obj.insert(word)\n# param_2 = obj.search(word)\n# param_3 = obj.startsWith(prefix)","compare_result":"1111111111111111","title_slug":"implement-trie-prefix-tree","has_notes":false,"flag_type":1}